{
  "path": "/home/passport/Repos/tmp/open-location-code/java/src/",
  "duplicateInfo": {
    "duplicates": [
      [
        {
          "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/DecodingTest.java",
          "startLine": 1,
          "endLine": 26
        },
        {
          "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/EncodingTest.java",
          "startLine": 1,
          "endLine": 26
        }
      ],
      [
        {
          "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/ShorteningTest.java",
          "startLine": 1,
          "endLine": 27
        },
        {
          "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/ValidityTest.java",
          "startLine": 1,
          "endLine": 31
        }
      ]
    ],
    "duplicateRate": 0.08901873174084894,
    "uniqueRate": 0.9352504973774642
  },
  "files": [
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/main/java/com/google/openlocationcode/OpenLocationCode.java",
      "filetype": "java",
      "functions": [
        {
          "name": "OpenLocationCode::CodeArea::CodeArea",
          "longName": "OpenLocationCode::CodeArea::CodeArea( double southLatitude , double westLongitude , double northLatitude , double eastLongitude , int length)",
          "startLine": 112,
          "nloc": 12,
          "ccn": 1,
          "tokens": 49,
          "params": 5,
          "length": 12,
          "fanIn": 6,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getSouthLatitude",
          "longName": "OpenLocationCode::CodeArea::getSouthLatitude()",
          "startLine": 125,
          "nloc": 3,
          "ccn": 1,
          "tokens": 8,
          "params": 0,
          "length": 3,
          "fanIn": 4,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getWestLongitude",
          "longName": "OpenLocationCode::CodeArea::getWestLongitude()",
          "startLine": 129,
          "nloc": 3,
          "ccn": 1,
          "tokens": 8,
          "params": 0,
          "length": 3,
          "fanIn": 4,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getLatitudeHeight",
          "longName": "OpenLocationCode::CodeArea::getLatitudeHeight()",
          "startLine": 133,
          "nloc": 3,
          "ccn": 1,
          "tokens": 10,
          "params": 0,
          "length": 3,
          "fanIn": 6,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getLongitudeWidth",
          "longName": "OpenLocationCode::CodeArea::getLongitudeWidth()",
          "startLine": 137,
          "nloc": 3,
          "ccn": 1,
          "tokens": 10,
          "params": 0,
          "length": 3,
          "fanIn": 6,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getCenterLatitude",
          "longName": "OpenLocationCode::CodeArea::getCenterLatitude()",
          "startLine": 141,
          "nloc": 3,
          "ccn": 1,
          "tokens": 14,
          "params": 0,
          "length": 3,
          "fanIn": 3,
          "fanOut": 0,
          "generalFanOut": 10,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getCenterLongitude",
          "longName": "OpenLocationCode::CodeArea::getCenterLongitude()",
          "startLine": 145,
          "nloc": 3,
          "ccn": 1,
          "tokens": 14,
          "params": 0,
          "length": 3,
          "fanIn": 4,
          "fanOut": 0,
          "generalFanOut": 10,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getNorthLatitude",
          "longName": "OpenLocationCode::CodeArea::getNorthLatitude()",
          "startLine": 149,
          "nloc": 3,
          "ccn": 1,
          "tokens": 8,
          "params": 0,
          "length": 3,
          "fanIn": 4,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getEastLongitude",
          "longName": "OpenLocationCode::CodeArea::getEastLongitude()",
          "startLine": 153,
          "nloc": 3,
          "ccn": 1,
          "tokens": 8,
          "params": 0,
          "length": 3,
          "fanIn": 4,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::CodeArea::getLength",
          "longName": "OpenLocationCode::CodeArea::getLength()",
          "startLine": 157,
          "nloc": 3,
          "ccn": 1,
          "tokens": 8,
          "params": 0,
          "length": 3,
          "fanIn": 1,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::OpenLocationCode",
          "longName": "OpenLocationCode::OpenLocationCode( String code)",
          "startLine": 171,
          "nloc": 7,
          "ccn": 2,
          "tokens": 42,
          "params": 1,
          "length": 7,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "OpenLocationCode::OpenLocationCode",
          "longName": "OpenLocationCode::OpenLocationCode( double latitude , double longitude , int codeLength)",
          "startLine": 187,
          "nloc": 46,
          "ccn": 11,
          "tokens": 408,
          "params": 3,
          "length": 68,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 3,
          "maxNestedStructures": 2
        },
        {
          "name": "OpenLocationCode::OpenLocationCode",
          "longName": "OpenLocationCode::OpenLocationCode( double latitude , double longitude)",
          "startLine": 262,
          "nloc": 3,
          "ccn": 1,
          "tokens": 19,
          "params": 2,
          "length": 3,
          "fanIn": 64,
          "fanOut": 0,
          "generalFanOut": 10,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::getCode",
          "longName": "OpenLocationCode::getCode()",
          "startLine": 271,
          "nloc": 3,
          "ccn": 1,
          "tokens": 8,
          "params": 0,
          "length": 3,
          "fanIn": 9,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::encode",
          "longName": "OpenLocationCode::encode( double latitude , double longitude)",
          "startLine": 283,
          "nloc": 3,
          "ccn": 1,
          "tokens": 23,
          "params": 2,
          "length": 3,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::encode",
          "longName": "OpenLocationCode::encode( double latitude , double longitude , int codeLength)",
          "startLine": 296,
          "nloc": 3,
          "ccn": 1,
          "tokens": 28,
          "params": 3,
          "length": 3,
          "fanIn": 14,
          "fanOut": 2,
          "generalFanOut": 20,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::decode",
          "longName": "OpenLocationCode::decode()",
          "startLine": 306,
          "nloc": 37,
          "ccn": 4,
          "tokens": 305,
          "params": 0,
          "length": 41,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "OpenLocationCode::decode",
          "longName": "OpenLocationCode::decode( String code)",
          "startLine": 356,
          "nloc": 3,
          "ccn": 1,
          "tokens": 20,
          "params": 1,
          "length": 3,
          "fanIn": 19,
          "fanOut": 2,
          "generalFanOut": 20,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::isFull",
          "longName": "OpenLocationCode::isFull()",
          "startLine": 365,
          "nloc": 3,
          "ccn": 1,
          "tokens": 15,
          "params": 0,
          "length": 3,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::isFull",
          "longName": "OpenLocationCode::isFull( String code)",
          "startLine": 375,
          "nloc": 3,
          "ccn": 1,
          "tokens": 20,
          "params": 1,
          "length": 3,
          "fanIn": 6,
          "fanOut": 2,
          "generalFanOut": 20,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::isShort",
          "longName": "OpenLocationCode::isShort()",
          "startLine": 384,
          "nloc": 3,
          "ccn": 2,
          "tokens": 24,
          "params": 0,
          "length": 3,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 1,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::isShort",
          "longName": "OpenLocationCode::isShort( String code)",
          "startLine": 394,
          "nloc": 3,
          "ccn": 1,
          "tokens": 20,
          "params": 1,
          "length": 3,
          "fanIn": 4,
          "fanOut": 2,
          "generalFanOut": 20,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::isPadded",
          "longName": "OpenLocationCode::isPadded()",
          "startLine": 404,
          "nloc": 3,
          "ccn": 1,
          "tokens": 15,
          "params": 0,
          "length": 3,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::isPadded",
          "longName": "OpenLocationCode::isPadded( String code)",
          "startLine": 415,
          "nloc": 3,
          "ccn": 1,
          "tokens": 20,
          "params": 1,
          "length": 3,
          "fanIn": 2,
          "fanOut": 2,
          "generalFanOut": 20,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::shorten",
          "longName": "OpenLocationCode::shorten( double referenceLatitude , double referenceLongitude)",
          "startLine": 428,
          "nloc": 20,
          "ccn": 5,
          "tokens": 138,
          "params": 2,
          "length": 27,
          "fanIn": 1,
          "fanOut": 8,
          "generalFanOut": 150,
          "maxNestingDepth": 1,
          "maxNestedStructures": 2
        },
        {
          "name": "OpenLocationCode::recover",
          "longName": "OpenLocationCode::recover( double referenceLatitude , double referenceLongitude)",
          "startLine": 464,
          "nloc": 32,
          "ccn": 8,
          "tokens": 237,
          "params": 2,
          "length": 47,
          "fanIn": 3,
          "fanOut": 9,
          "generalFanOut": 170,
          "maxNestingDepth": 2,
          "maxNestedStructures": 2
        },
        {
          "name": "OpenLocationCode::contains",
          "longName": "OpenLocationCode::contains( double latitude , double longitude)",
          "startLine": 519,
          "nloc": 7,
          "ccn": 4,
          "tokens": 50,
          "params": 2,
          "length": 7,
          "fanIn": 5,
          "fanOut": 6,
          "generalFanOut": 50,
          "maxNestingDepth": 3,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::equals",
          "longName": "OpenLocationCode::equals( Object o)",
          "startLine": 528,
          "nloc": 10,
          "ccn": 4,
          "tokens": 59,
          "params": 1,
          "length": 10,
          "fanIn": 5,
          "fanOut": 2,
          "generalFanOut": 40,
          "maxNestingDepth": 2,
          "maxNestedStructures": 1
        },
        {
          "name": "OpenLocationCode::hashCode",
          "longName": "OpenLocationCode::hashCode()",
          "startLine": 540,
          "nloc": 3,
          "ccn": 2,
          "tokens": 18,
          "params": 0,
          "length": 3,
          "fanIn": 1,
          "fanOut": 1,
          "generalFanOut": 10,
          "maxNestingDepth": 1,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::toString",
          "longName": "OpenLocationCode::toString()",
          "startLine": 545,
          "nloc": 3,
          "ccn": 1,
          "tokens": 10,
          "params": 0,
          "length": 3,
          "fanIn": 1,
          "fanOut": 1,
          "generalFanOut": 10,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::isValidCode",
          "longName": "OpenLocationCode::isValidCode( String code)",
          "startLine": 557,
          "nloc": 57,
          "ccn": 25,
          "tokens": 348,
          "params": 1,
          "length": 75,
          "fanIn": 5,
          "fanOut": 0,
          "generalFanOut": 180,
          "maxNestingDepth": 3,
          "maxNestedStructures": 4
        },
        {
          "name": "OpenLocationCode::isFullCode",
          "longName": "OpenLocationCode::isFullCode( String code)",
          "startLine": 639,
          "nloc": 7,
          "ccn": 2,
          "tokens": 31,
          "params": 1,
          "length": 7,
          "fanIn": 2,
          "fanOut": 2,
          "generalFanOut": 20,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "OpenLocationCode::isShortCode",
          "longName": "OpenLocationCode::isShortCode( String code)",
          "startLine": 653,
          "nloc": 7,
          "ccn": 2,
          "tokens": 31,
          "params": 1,
          "length": 7,
          "fanIn": 1,
          "fanOut": 2,
          "generalFanOut": 20,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "OpenLocationCode::clipLatitude",
          "longName": "OpenLocationCode::clipLatitude( double latitude)",
          "startLine": 663,
          "nloc": 3,
          "ccn": 1,
          "tokens": 25,
          "params": 1,
          "length": 3,
          "fanIn": 2,
          "fanOut": 0,
          "generalFanOut": 20,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "OpenLocationCode::normalizeLongitude",
          "longName": "OpenLocationCode::normalizeLongitude( double longitude)",
          "startLine": 667,
          "nloc": 9,
          "ccn": 3,
          "tokens": 43,
          "params": 1,
          "length": 9,
          "fanIn": 2,
          "fanOut": 0,
          "generalFanOut": 0,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "OpenLocationCode::computeLatitudePrecision",
          "longName": "OpenLocationCode::computeLatitudePrecision( int codeLength)",
          "startLine": 682,
          "nloc": 6,
          "ccn": 2,
          "tokens": 57,
          "params": 1,
          "length": 6,
          "fanIn": 2,
          "fanOut": 0,
          "generalFanOut": 40,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/DecodingTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "DecodingTest::TestData::TestData",
          "longName": "DecodingTest::TestData::TestData( String line)",
          "startLine": 33,
          "nloc": 12,
          "ccn": 2,
          "tokens": 115,
          "params": 1,
          "length": 12,
          "fanIn": 3,
          "fanOut": 0,
          "generalFanOut": 7,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "DecodingTest::setUp",
          "longName": "DecodingTest::setUp()",
          "startLine": 50,
          "nloc": 11,
          "ccn": 3,
          "tokens": 79,
          "params": 0,
          "length": 11,
          "fanIn": 0,
          "fanOut": 1,
          "generalFanOut": 8,
          "maxNestingDepth": 2,
          "maxNestedStructures": 2
        },
        {
          "name": "DecodingTest::testDecode",
          "longName": "DecodingTest::testDecode()",
          "startLine": 63,
          "nloc": 27,
          "ccn": 2,
          "tokens": 144,
          "params": 0,
          "length": 28,
          "fanIn": 0,
          "fanOut": 5,
          "generalFanOut": 108,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "DecodingTest::testContains",
          "longName": "DecodingTest::testContains()",
          "startLine": 93,
          "nloc": 24,
          "ccn": 2,
          "tokens": 176,
          "params": 0,
          "length": 24,
          "fanIn": 0,
          "fanOut": 5,
          "generalFanOut": 198,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/EncodingTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "EncodingTest::TestData::TestData",
          "longName": "EncodingTest::TestData::TestData( String line)",
          "startLine": 31,
          "nloc": 10,
          "ccn": 2,
          "tokens": 87,
          "params": 1,
          "length": 10,
          "fanIn": 2,
          "fanOut": 0,
          "generalFanOut": 5,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "EncodingTest::setUp",
          "longName": "EncodingTest::setUp()",
          "startLine": 46,
          "nloc": 11,
          "ccn": 4,
          "tokens": 87,
          "params": 0,
          "length": 11,
          "fanIn": 0,
          "fanOut": 1,
          "generalFanOut": 9,
          "maxNestingDepth": 3,
          "maxNestedStructures": 2
        },
        {
          "name": "EncodingTest::testEncodeFromLatLong",
          "longName": "EncodingTest::testEncodeFromLatLong()",
          "startLine": 59,
          "nloc": 10,
          "ccn": 2,
          "tokens": 59,
          "params": 0,
          "length": 10,
          "fanIn": 0,
          "fanOut": 4,
          "generalFanOut": 24,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/BenchmarkTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "BenchmarkTest::TestData::TestData",
          "longName": "BenchmarkTest::TestData::TestData()",
          "startLine": 27,
          "nloc": 10,
          "ccn": 3,
          "tokens": 90,
          "params": 0,
          "length": 10,
          "fanIn": 3,
          "fanOut": 0,
          "generalFanOut": 4,
          "maxNestingDepth": 2,
          "maxNestedStructures": 1
        },
        {
          "name": "BenchmarkTest::setUp",
          "longName": "BenchmarkTest::setUp()",
          "startLine": 42,
          "nloc": 6,
          "ccn": 2,
          "tokens": 39,
          "params": 0,
          "length": 6,
          "fanIn": 0,
          "fanOut": 1,
          "generalFanOut": 3,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "BenchmarkTest::benchmarkEncode",
          "longName": "BenchmarkTest::benchmarkEncode()",
          "startLine": 50,
          "nloc": 10,
          "ccn": 2,
          "tokens": 75,
          "params": 0,
          "length": 11,
          "fanIn": 0,
          "fanOut": 3,
          "generalFanOut": 42,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "BenchmarkTest::benchmarkDecode",
          "longName": "BenchmarkTest::benchmarkDecode()",
          "startLine": 63,
          "nloc": 10,
          "ccn": 2,
          "tokens": 67,
          "params": 0,
          "length": 11,
          "fanIn": 0,
          "fanOut": 3,
          "generalFanOut": 42,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/ShorteningTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "ShorteningTest::TestData::TestData",
          "longName": "ShorteningTest::TestData::TestData( String line)",
          "startLine": 30,
          "nloc": 11,
          "ccn": 2,
          "tokens": 91,
          "params": 1,
          "length": 11,
          "fanIn": 3,
          "fanOut": 0,
          "generalFanOut": 4,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "ShorteningTest::setUp",
          "longName": "ShorteningTest::setUp()",
          "startLine": 46,
          "nloc": 11,
          "ccn": 3,
          "tokens": 79,
          "params": 0,
          "length": 11,
          "fanIn": 0,
          "fanOut": 1,
          "generalFanOut": 8,
          "maxNestingDepth": 2,
          "maxNestedStructures": 2
        },
        {
          "name": "ShorteningTest::testShortening",
          "longName": "ShorteningTest::testShortening()",
          "startLine": 59,
          "nloc": 12,
          "ccn": 4,
          "tokens": 88,
          "params": 0,
          "length": 12,
          "fanIn": 0,
          "fanOut": 2,
          "generalFanOut": 36,
          "maxNestingDepth": 3,
          "maxNestedStructures": 2
        },
        {
          "name": "ShorteningTest::testRecovering",
          "longName": "ShorteningTest::testRecovering()",
          "startLine": 73,
          "nloc": 11,
          "ccn": 4,
          "tokens": 82,
          "params": 0,
          "length": 11,
          "fanIn": 0,
          "fanOut": 2,
          "generalFanOut": 36,
          "maxNestingDepth": 3,
          "maxNestedStructures": 2
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/ValidityTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "ValidityTest::TestData::TestData",
          "longName": "ValidityTest::TestData::TestData( String line)",
          "startLine": 33,
          "nloc": 10,
          "ccn": 2,
          "tokens": 87,
          "params": 1,
          "length": 10,
          "fanIn": 4,
          "fanOut": 0,
          "generalFanOut": 25,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "ValidityTest::setUp",
          "longName": "ValidityTest::setUp()",
          "startLine": 48,
          "nloc": 11,
          "ccn": 3,
          "tokens": 79,
          "params": 0,
          "length": 11,
          "fanIn": 0,
          "fanOut": 2,
          "generalFanOut": 40,
          "maxNestingDepth": 2,
          "maxNestedStructures": 2
        },
        {
          "name": "ValidityTest::testIsValid",
          "longName": "ValidityTest::testIsValid()",
          "startLine": 61,
          "nloc": 8,
          "ccn": 2,
          "tokens": 40,
          "params": 0,
          "length": 8,
          "fanIn": 0,
          "fanOut": 1,
          "generalFanOut": 10,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "ValidityTest::testIsShort",
          "longName": "ValidityTest::testIsShort()",
          "startLine": 71,
          "nloc": 8,
          "ccn": 2,
          "tokens": 40,
          "params": 0,
          "length": 8,
          "fanIn": 0,
          "fanOut": 1,
          "generalFanOut": 10,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        },
        {
          "name": "ValidityTest::testIsFull",
          "longName": "ValidityTest::testIsFull()",
          "startLine": 81,
          "nloc": 8,
          "ccn": 2,
          "tokens": 40,
          "params": 0,
          "length": 8,
          "fanIn": 0,
          "fanOut": 1,
          "generalFanOut": 10,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/UtilsTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "UtilsTest::testClipping",
          "longName": "UtilsTest::testClipping()",
          "startLine": 15,
          "nloc": 22,
          "ccn": 1,
          "tokens": 135,
          "params": 0,
          "length": 22,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 60,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "UtilsTest::testMaxCodeLength",
          "longName": "UtilsTest::testMaxCodeLength()",
          "startLine": 39,
          "nloc": 16,
          "ccn": 1,
          "tokens": 98,
          "params": 0,
          "length": 19,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 36,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/TestUtils.java",
      "filetype": "java",
      "functions": [
        {
          "name": "TestUtils::getTestFile",
          "longName": "TestUtils::getTestFile( String testFile)",
          "startLine": 7,
          "nloc": 11,
          "ccn": 2,
          "tokens": 70,
          "params": 1,
          "length": 11,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 15,
          "maxNestingDepth": 1,
          "maxNestedStructures": 1
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/RecoverTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "RecoverTest::testRecoveryNearSouthPole",
          "longName": "RecoverTest::testRecoveryNearSouthPole()",
          "startLine": 14,
          "nloc": 4,
          "ccn": 1,
          "tokens": 39,
          "params": 0,
          "length": 4,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 8,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "RecoverTest::testRecoveryNearNorthPole",
          "longName": "RecoverTest::testRecoveryNearNorthPole()",
          "startLine": 20,
          "nloc": 4,
          "ccn": 1,
          "tokens": 38,
          "params": 0,
          "length": 4,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 8,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        }
      ]
    },
    {
      "filename": "/home/passport/Repos/tmp/open-location-code/java/src/test/java/com/google/openlocationcode/PrecisionTest.java",
      "filetype": "java",
      "functions": [
        {
          "name": "PrecisionTest::testWidthInDegrees",
          "longName": "PrecisionTest::testWidthInDegrees()",
          "startLine": 15,
          "nloc": 14,
          "ccn": 1,
          "tokens": 153,
          "params": 0,
          "length": 14,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 24,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        },
        {
          "name": "PrecisionTest::testHeightInDegrees",
          "longName": "PrecisionTest::testHeightInDegrees()",
          "startLine": 31,
          "nloc": 14,
          "ccn": 1,
          "tokens": 153,
          "params": 0,
          "length": 14,
          "fanIn": 0,
          "fanOut": 0,
          "generalFanOut": 24,
          "maxNestingDepth": 0,
          "maxNestedStructures": 0
        }
      ]
    }
  ]
}
